<UserControl x:Class="ApplicationLayer.WpfApp.Views.WindowViews.SolutionExplorer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:mvvm="http://www.galasoft.ch/mvvmlight"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:lex="http://wpflocalizeextension.codeplex.com"
             lex:ResxLocalizationProvider.DefaultAssembly="ApplicationLayer.Define"
             lex:ResxLocalizationProvider.DefaultDictionary="Resources"
             xmlns:ap="clr-namespace:ApplicationLayer.Views.AttachedProperties;assembly=ApplicationLayer.Views"
             xmlns:common="clr-namespace:ApplicationLayer.Common;assembly=ApplicationLayer.Common"
             xmlns:models="clr-namespace:ApplicationLayer.Models.SolutionPackage;assembly=ApplicationLayer.Models"
             xmlns:commands="clr-namespace:ApplicationLayer.WpfApp.Commands"
             xmlns:minicPackage="clr-namespace:ApplicationLayer.Models.SolutionPackage.MiniCPackage;assembly=ApplicationLayer.Models"
             xmlns:mcModels="clr-namespace:ApplicationLayer.Models.SolutionPackage.MiniCPackage;assembly=ApplicationLayer.Models"
             xmlns:grids="http://schemas.actiprosoftware.com/winfx/xaml/grids"
             xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
             xmlns:viewModels="clr-namespace:ApplicationLayer.ViewModels.ToolWindowViewModels;assembly=ApplicationLayer.ViewModels"
             xmlns:views="clr-namespace:ApplicationLayer.Views;assembly=ApplicationLayer.Views"
             xmlns:converter="clr-namespace:ApplicationLayer.WpfApp.Converters"
             mc:Ignorable="d"
             DataContext="{Binding SolutionExplorerWindow, Source={StaticResource Locator}}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Menus/SolutionExplorerMenus.xaml" />
                <ResourceDictionary Source="/Resources/DataTemplates/HierarchicalDataTemplates.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <TextBox Grid.Row="0"/>
        <TextBox Grid.Row="1"/>
        <grids:TreeListBox x:Name="treeListBox" Grid.Row="2" IsRootItemVisible="True" TopLevelIndent="2"
                                    RootItem="{Binding Solution, Mode=OneWay}"
                                    SelectedItem="{Binding SelectedItem}"
                                    ap:TreeListBoxHook.DefaultActionHook="True"
                                    ap:TreeListBoxHook.CancelCondition="{Binding IsSelectedItemLeafNode}"
                                    ap:TreeListBoxHook.DefaultActionCommand="{Binding DoubleClickCommand}">

            <!-- setting adapter to process a tree node -->
            <grids:TreeListBox.ItemAdapter>
                <views:MiniCProjectTreeListBoxItemAdapter />
            </grids:TreeListBox.ItemAdapter>

            <grids:TreeListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel x:Name="stackPanel" Orientation="Horizontal">
                        <Image x:Name="image" Width="16" Height="16" Margin="0 0 3 0"/>
                        <shared:EditableContentControl x:Name="edit" Style="{StaticResource NormalTreeNodeStyle}" />
                    </StackPanel>

                    <DataTemplate.Triggers>
                        <!-- setting a solution state -->
                        <DataTrigger Binding="{Binding Tag, 
                                            Converter={converter:DataTypeConverter}}" 
                                             Value="{x:Type models:SolutionTreeNodeModel}">
                            <Setter TargetName="image" Property="Source" Value="{DynamicResource SolutionImagePath}"/>
                            <Setter TargetName="stackPanel" Property="ContextMenu" Value="{StaticResource SolutionMenus}"/>
                            <Setter TargetName="edit" Property="Style" Value="{StaticResource SolutionTreeNodeStyle}"/>
                        </DataTrigger>

                        <!-- setting an error project node -->
                        <DataTrigger Binding="{Binding Tag, 
                                            Converter={converter:DataTypeConverter}}" 
                                            Value="{x:Type models:ErrorProjectTreeNodeModel}">
                            <Setter TargetName="image" Property="Source" Value="{DynamicResource ErrorImagePath}"/>
                            <Setter TargetName="stackPanel" Property="ContextMenu" Value="{StaticResource ErrorMenus}"/>
                        </DataTrigger>

                        <!-- setting MiniC Project node -->
                        <DataTrigger Binding="{Binding Tag, 
                                            Converter={converter:DataTypeConverter}}" 
                                            Value="{x:Type mcModels:MiniCProjectTreeNodeModel}">
                            <Setter TargetName="image" Property="Source" Value="{DynamicResource MCProject16ImagePath}"/>
                            <Setter TargetName="stackPanel" Property="ContextMenu" Value="{StaticResource MiniCProjectMenus}"/>
                        </DataTrigger>

                        <!-- setting file node -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Tag, Converter={converter:DataTypeConverter}}" 
                                                Value="{x:Type models:FileTreeNodeModel}"/>
                                <Condition Binding="{Binding IsExistFile}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="image" Property="Source" Value="{DynamicResource UnknownFile16Path}"/>
                            <Setter TargetName="stackPanel" Property="ContextMenu" Value="{StaticResource ErrorMenus}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Tag, Converter={converter:DataTypeConverter}}" 
                                                Value="{x:Type models:FileTreeNodeModel}"/>
                                <Condition Binding="{Binding IsExistFile}" Value="true"/>
                                <Condition Binding="{Binding FileType}" Value="{x:Static common:LanguageExtensions.MiniCSource}"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="image" Property="Source" Value="{DynamicResource CFile16ImagePath}"/>
                            <Setter TargetName="stackPanel" Property="ContextMenu" Value="{StaticResource MiniCMenus}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Tag, Converter={converter:DataTypeConverter}}" 
                                                Value="{x:Type models:FileTreeNodeModel}"/>
                                <Condition Binding="{Binding IsExistFile}" Value="true"/>
                                <Condition Binding="{Binding FileType}" Value="{x:Static common:LanguageExtensions.Header}"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="image" Property="Source" Value="{DynamicResource CHeader16ImagePath}"/>
                            <Setter TargetName="stackPanel" Property="ContextMenu" Value="{StaticResource MiniCMenus}"/>
                        </MultiDataTrigger>

                        <!-- setting a filter node -->
                        <DataTrigger Binding="{Binding Tag, 
                                            Converter={converter:DataTypeConverter}}" 
                                            Value="{x:Type models:FilterTreeNodeModel}">
                            <Setter TargetName="stackPanel" Property="ContextMenu" Value="{StaticResource FilterMenuItems}"/>
                        </DataTrigger>

                        <!-- setting a variable node -->
                        <DataTrigger Binding="{Binding Tag,
                                            Converter={converter:DataTypeConverter}}"
                                            Value="{x:Type mcModels:VarTreeNodeModel}">
                            <Setter TargetName="image" Property="Source" Value="{DynamicResource Var16ImagePath}"/>
                        </DataTrigger>

                        <!-- setting a function node -->
                        <DataTrigger Binding="{Binding Tag,
                                            Converter={converter:DataTypeConverter}}"
                                            Value="{x:Type mcModels:FuncTreeNodeModel}">
                            <Setter TargetName="image" Property="Source" Value="{DynamicResource Func16ImagePath}"/>
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Tag, Converter={converter:DataTypeConverter}}" 
                                                Value="{x:Type models:FilterTreeNodeModel}"/>
                                <Condition Binding="{Binding IsExpanded}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="image" Property="Source" Value="{DynamicResource OpenFolderImagePath}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Tag, Converter={converter:DataTypeConverter}}" 
                                                Value="{x:Type models:FilterTreeNodeModel}"/>
                                <Condition Binding="{Binding IsExpanded}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="image" Property="Source" Value="{DynamicResource CloseFolderImagePath}"/>
                        </MultiDataTrigger>

                         <!-- setting a dependency filter icon -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Tag, Converter={converter:DataTypeConverter}}" 
                                                Value="{x:Type models:FilterTreeNodeModel}"/>
                                <Condition Binding="{Binding DisplayName}" Value="{lex:Loc Key=ExternDependency}"/>
                                <Condition Binding="{Binding IsExpanded}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="image" Property="Source" Value="{DynamicResource OpenDepFilterImagePath}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Tag, Converter={converter:DataTypeConverter}}" 
                                                Value="{x:Type models:FilterTreeNodeModel}"/>
                                <Condition Binding="{Binding DisplayName}" Value="{lex:Loc Key=ExternDependency}"/>
                                <Condition Binding="{Binding IsExpanded}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="image" Property="Source" Value="{DynamicResource CloseDepFilterImagePath}"/>
                        </MultiDataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </grids:TreeListBox.ItemTemplate>

        </grids:TreeListBox>

    </Grid>
</UserControl>
