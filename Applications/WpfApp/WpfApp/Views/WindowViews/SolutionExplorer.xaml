<UserControl x:Class="ApplicationLayer.WpfApp.Views.WindowViews.SolutionExplorer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:mvvm="http://www.galasoft.ch/mvvmlight"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:localConverters="clr-namespace:ApplicationLayer.WpfApp.Converters"
             xmlns:logicConverters="clr-namespace:ApplicationLayer.WpfApp.Converters.LogicConverters"
             xmlns:local="clr-namespace:ApplicationLayer.WpfApp.Views.WindowViews"
             mc:Ignorable="d" 
             DataContext="{Binding SolutionExplorerWindow, Source={StaticResource Locator}}">
    <UserControl.Resources>
        <Style x:Key="SolutionTreeViewItemStyle" TargetType="TreeViewItem" >
            <Setter Property="IsExpanded" Value="True"/>
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="Expander" ClickMode="Press" 
                                                  Style="{StaticResource ExpandCollapseToggleStyle}"
                                                  IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource CommonUnfocusedSelectedBackgroundBrush}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <TextBox Grid.Row="0"/>
        <TextBox Grid.Row="1"/>
        <TreeView Grid.Row="2" FontSize="13" ItemsSource="{Binding Solutions}"
                                                                  ItemContainerStyle="{DynamicResource SolutionTreeViewItemStyle}">

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectedItemChanged">
                    <mvvm:EventToCommand Command="{Binding SelectedCommand}"
                                                            PassEventArgsToCommand="True"
                                                            EventArgsConverter="{localConverters:SelectedItemConverter}"
                                                            EventArgsConverterParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                                                                        AncestorType={x:Type local:SolutionExplorer}}}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <mvvm:EventToCommand Command="{Binding MouseDoubleClickCommand}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="KeyDown">
                    <mvvm:EventToCommand Command="{Binding KeyDownCommand}"
                                                            PassEventArgsToCommand="True"
                                                            EventArgsConverter="{localConverters:RenameHotKeyConverter}"
                                                            EventArgsConverterParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                                                                        AncestorType={x:Type local:SolutionExplorer}}}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </TreeView>

    </Grid>
</UserControl>
