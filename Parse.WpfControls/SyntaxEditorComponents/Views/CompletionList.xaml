<Popup x:Class="Parse.WpfControls.SyntaxEditorComponents.Views.CompletionList"
       xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
       xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
       xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
       xmlns:viewmodel="clr-namespace:Parse.WpfControls.SyntaxEditorComponents.ViewModels"
      xmlns:behavior="clr-namespace:Parse.WpfControls.SyntaxEditorComponents.Behaviors"
       xmlns:mvvm="http://www.galasoft.ch/mvvmlight"
       xmlns:eventArgConverters="clr-namespace:Parse.WpfControls.Converters"
       xmlns:resources="clr-namespace:Parse.WpfControls.SyntaxEditorComponents.Views"
       mc:Ignorable="d" 
       x:Name="owner"
       MinWidth="50">
    <Popup.DataContext>
        <viewmodel:CompletionListViewModel/>
    </Popup.DataContext>

    <Popup.Resources>
        <Style TargetType="Popup">
            <Style.Triggers>
                <!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=
                        {x:Type ToggleButton}},Path=IsChecked}" Value="True">
                </DataTrigger>-->
            </Style.Triggers>
        </Style>

        <Style TargetType="ToggleButton" x:Key="filterBtnStyle">
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Command" Value="{Binding FilterButtonClickCmd}"/>
            <!--<Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Self}}"/>
                </Trigger>
            </Style.Triggers>-->
        </Style>
        
    </Popup.Resources>

    <i:Interaction.Behaviors>
        <behavior:DynamicToggleButtonCreateBehavior/>
    </i:Interaction.Behaviors>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Name="gridColumn"  />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <ListBox x:Name="listBox" Grid.Row="0" ItemsSource="{Binding CandidateCollection}" 
                 MaxHeight="100" 
                 SelectedIndex="{Binding SelectedIndex, Mode=TwoWay}"
                 HorizontalContentAlignment="Stretch"
                 >

            <ListBox.ItemTemplate>
                <DataTemplate>
                    <VirtualizingStackPanel Name="vStack" Orientation="Horizontal">
                        <Image Source="{Binding ImageSource}"  Width="16" Height="16" Margin="0,0,2,0"/>
                        <TextBlock Text="{Binding ItemName}"/>
                    </VirtualizingStackPanel>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="True">
                            <Setter TargetName="vStack" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ListBox.ItemTemplate>

            <!--<ListBox.Resources>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border Name="Border" Padding="2" SnapsToDevicePixels="true" HorizontalAlignment="Stretch">
                                    <ContentPresenter HorizontalAlignment="Stretch"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="Border" Property="Background"
                                            Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.Resources>-->
        </ListBox>

        <StackPanel Grid.Row="1" Orientation="Horizontal">
            <ToggleButton x:Name="propertyBtn" Visibility="Collapsed" 
                          IsChecked="{Binding IsFilteringProperty}"
                          Style="{StaticResource filterBtnStyle}">
                <Image Source="{Binding PropertyImgSrc}"  Width="16" Height="16"/>
            </ToggleButton>
            <ToggleButton x:Name="keywordBtn" Visibility="Collapsed" 
                          IsChecked="{Binding IsFilteringKeyword, Mode=TwoWay}"
                          Style="{StaticResource filterBtnStyle}">
                <Image Source="{Binding KeywordImgSrc}"  Width="16" Height="16"/>
                <!--<i:Interaction.Behaviors>
                    <behavior:ToggleButtonBehavior/>
                </i:Interaction.Behaviors>-->
            </ToggleButton>
            <ToggleButton x:Name="enumBtn" Visibility="Collapsed" 
                          IsChecked="{Binding IsFilteringEnum}"
                          Style="{StaticResource filterBtnStyle}">
                <Image Source="{Binding EnumImgSrc}"  Width="16" Height="16"/>
            </ToggleButton>
            <ToggleButton x:Name="functionBtn" Visibility="Collapsed" 
                          IsChecked="{Binding IsFilteringFunction}"
                          Style="{StaticResource filterBtnStyle}">
                <Image Source="{Binding FunctionImgSrc}"  Width="16" Height="16"/>
            </ToggleButton>
        </StackPanel>

    </Grid>
</Popup>
