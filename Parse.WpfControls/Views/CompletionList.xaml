<Popup x:Class="Parse.WpfControls.Views.CompletionList"
       xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
       xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
       xmlns:attached="clr-namespace:Parse.WpfControls.AttachedProperties"
       xmlns:behavior="clr-namespace:Parse.WpfControls.Behaviors"
       xmlns:converter="clr-namespace:Parse.WpfControls.Converters"
       xmlns:viewmodel="clr-namespace:Parse.WpfControls.ViewModels"
       mc:Ignorable="d" 
       x:Name="owner"
       MinWidth="50">
    <Popup.DataContext>
        <viewmodel:CompletionListViewModel/>
    </Popup.DataContext>

    <Popup.Resources>
        <Style TargetType="Popup">
            <Style.Triggers>
                <!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=
                        {x:Type ToggleButton}},Path=IsChecked}" Value="True">
                </DataTrigger>-->
            </Style.Triggers>
        </Style>

        <Style TargetType="ToggleButton" x:Key="filterBtnStyle">
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Command" Value="{Binding FilterButtonClickCmd}"/>
            <!--<Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Self}}"/>
                </Trigger>
            </Style.Triggers>-->
        </Style>
        
    </Popup.Resources>

    <i:Interaction.Behaviors>
        <behavior:DynamicToggleButtonCreateBehavior/>
    </i:Interaction.Behaviors>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Name="gridColumn"  />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <ListBox x:Name="listBox" Grid.Row="0" ItemsSource="{Binding CandidateCollection}" 
                 MaxHeight="100" 
                 SelectedIndex="{Binding SelectedIndex, Mode=TwoWay}"
                 HorizontalContentAlignment="Stretch"
                 >

            <ListBox.ItemTemplate>
                <DataTemplate>
                    <VirtualizingStackPanel Name="vStack" Orientation="Horizontal">
                        <Image Source="{Binding ImageSource}"  Width="16" Height="16" Margin="0,0,2,0"/>
                        <TextBlock Text="{Binding ItemName}" attached:TextBlockExtension.BoldIndexes="{Binding MatchedIndexes, Converter={converter:UIntListToStringConverter}}"/>
                    </VirtualizingStackPanel>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="True">
                            <!--<Setter TargetName="vStack" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>-->
                            <Setter TargetName="vStack" Property="Background" Value="Yellow"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ListBox.ItemTemplate>

            <!--<ListBox.Resources>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border Name="Border" Padding="2" SnapsToDevicePixels="true" HorizontalAlignment="Stretch">
                                    <ContentPresenter HorizontalAlignment="Stretch"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="Border" Property="Background"
                                            Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.Resources>-->
        </ListBox>

        <StackPanel Grid.Row="1" Orientation="Horizontal" Background="{Binding ElementName=listBox, Path=Background}">
            <ToggleButton x:Name="fieldBtn" Visibility="Collapsed" 
                          IsChecked="{Binding FieldInfo.IsFiltering}"
                          ToolTip="{Binding FieldInfo.Explain}"
                          Style="{StaticResource filterBtnStyle}">
                <Image Source="{Binding FieldInfo.ImgSrc}"  Width="16" Height="16"/>
            </ToggleButton>
            <ToggleButton x:Name="propertyBtn" Visibility="Collapsed" 
                          IsChecked="{Binding PropertyInfo.IsFiltering}"
                          ToolTip="{Binding PropertyInfo.Explain}"
                          Style="{StaticResource filterBtnStyle}">
                <Image Source="{Binding PropertyInfo.ImgSrc}"  Width="16" Height="16"/>
            </ToggleButton>
            <ToggleButton x:Name="keywordBtn" Visibility="Collapsed" 
                          IsChecked="{Binding KeywordInfo.IsFiltering, Mode=TwoWay}"
                          ToolTip="{Binding KeywordInfo.Explain}"
                          Style="{StaticResource filterBtnStyle}">
                <Image Source="{Binding KeywordInfo.ImgSrc}"  Width="16" Height="16"/>
            </ToggleButton>
            <ToggleButton x:Name="enumBtn" Visibility="Collapsed" 
                          IsChecked="{Binding IsFilteringEnum}"
                          ToolTip="{Binding EnumInfo.Explain}"
                          Style="{StaticResource filterBtnStyle}">
                <Image Source="{Binding EnumInfo.ImgSrc}"  Width="16" Height="16"/>
            </ToggleButton>
            <ToggleButton x:Name="codeSnippBtn" Visibility="Collapsed" 
                          IsChecked="{Binding CodeSnippInfo.IsFiltering}"
                          ToolTip="{Binding CodeSnippInfo.Explain}"
                          Style="{StaticResource filterBtnStyle}">
                <Image Source="{Binding CodeSnippInfo.ImgSrc}"  Width="16" Height="16"/>
            </ToggleButton>
            <ToggleButton x:Name="functionBtn" Visibility="Collapsed" 
                          IsChecked="{Binding IsFilteringFunction}"
                          ToolTip="{Binding FunctionInfo.Explain}"
                          Style="{StaticResource filterBtnStyle}">
                <Image Source="{Binding FunctionInfo.ImgSrc}"  Width="16" Height="16"/>
            </ToggleButton>
            <ToggleButton x:Name="namespaceBtn" Visibility="Collapsed" 
                          IsChecked="{Binding NamespaceInfo.IsFiltering}"
                          ToolTip="{Binding NamespaceInfo.Explain}"
                          Style="{StaticResource filterBtnStyle}">
                <Image Source="{Binding NamespaceInfo.ImgSrc}"  Width="16" Height="16"/>
            </ToggleButton>
            <ToggleButton x:Name="eventBtn" Visibility="Collapsed" 
                          IsChecked="{Binding EventInfo.IsFiltering}"
                          ToolTip="{Binding EventInfo.Explain}"
                          Style="{StaticResource filterBtnStyle}">
                <Image Source="{Binding EventInfo.ImgSrc}"  Width="16" Height="16"/>
            </ToggleButton>
            <ToggleButton x:Name="delegateBtn" Visibility="Collapsed" 
                          IsChecked="{Binding DelegateInfo.IsFiltering}"
                          ToolTip="{Binding DelegateInfo.Explain}"
                          Style="{StaticResource filterBtnStyle}">
                <Image Source="{Binding DelegateInfo.ImgSrc}"  Width="16" Height="16"/>
            </ToggleButton>
            <ToggleButton x:Name="classBtn" Visibility="Collapsed" 
                          IsChecked="{Binding ClassInfo.IsFiltering}"
                          ToolTip="{Binding ClassInfo.Explain}"
                          Style="{StaticResource filterBtnStyle}">
                <Image Source="{Binding ClassInfo.ImgSrc}"  Width="16" Height="16"/>
            </ToggleButton>
            <ToggleButton x:Name="structBtn" Visibility="Collapsed" 
                          IsChecked="{Binding StructInfo.IsFiltering}"
                          ToolTip="{Binding StructInfo.Explain}"
                          Style="{StaticResource filterBtnStyle}">
                <Image Source="{Binding StructInfo.ImgSrc}"  Width="16" Height="16"/>
            </ToggleButton>
            <ToggleButton x:Name="interfaceBtn" Visibility="Collapsed" 
                          IsChecked="{Binding InterfaceInfo.IsFiltering}"
                          ToolTip="{Binding InterfaceInfo.Explain}"
                          Style="{StaticResource filterBtnStyle}">
                <Image Source="{Binding InterfaceInfo.ImgSrc}"  Width="16" Height="16"/>
            </ToggleButton>
        </StackPanel>

    </Grid>
</Popup>
