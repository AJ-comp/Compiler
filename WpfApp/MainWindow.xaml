<Window
        x:Class="WpfApp.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:mvvm="http://www.galasoft.ch/mvvmlight"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:wpfcontrols="clr-namespace:Parse.WpfControls;assembly=Parse.WpfControls"
    xmlns:localConverters="clr-namespace:WpfApp.Converters"
    xmlns:converter="clr-namespace:Parse.WpfControls.Converters;assembly=Parse.WpfControls"
    xmlns:syntaxeditor="clr-namespace:Parse.WpfControls.SyntaxEditor;assembly=Parse.WpfControls.SyntaxEditor"
    xmlns:behaviors="clr-namespace:WpfApp.Behaviors"
    xmlns:localViewModels="clr-namespace:WpfApp.ViewModels"
    xmlns:view="clr-namespace:WpfApp.Views"
    xmlns:lex="http://wpflocalizeextension.codeplex.com" 
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        lex:LocalizeDictionary.DesignCulture="en"
      lex:ResxLocalizationProvider.DefaultAssembly="WpfApp"
      lex:ResxLocalizationProvider.DefaultDictionary="Resources"
    mc:Ignorable="d"
        Title="MainWindow" Height="600" Width="800"
        WindowStartupLocation="CenterScreen"
        BorderThickness="1"
        ResizeMode="CanResizeWithGrip"
        WindowState="Maximized">
    <Window.DataContext>
        <localViewModels:MainWindowViewModel/>
    </Window.DataContext>

    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="{lex:Loc Key=_File}" InputGestureText="Alt+F">
                <MenuItem Header="{lex:Loc Key=New}" InputGestureText="Alt+N">
                    <MenuItem Header="{lex:Loc Key=Project}" InputGestureText="Ctrl+Shift+N"/>
                    <MenuItem Header="{lex:Loc Key=_File}" InputGestureText="Ctrl+N"/>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="{lex:Loc Key=_Edit}" InputGestureText="Alt+E"/>
            <MenuItem Header="{lex:Loc Key=View}" InputGestureText="Alt+V"/>
        </Menu>

        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Line="/>
                    <TextBlock Text="{Binding ElementName=syntaxEditor, Path=TextArea.LineIndex}"/>
                    <Border BorderThickness="5" BorderBrush="Transparent"/>
                    <TextBlock Text="CaretPosition="/>
                    <TextBlock Text="{Binding ElementName=syntaxEditor, Path=TextArea.StartCaretIndexByLine}"/>
                    <Border BorderThickness="5" BorderBrush="Transparent"/>
                    <TextBlock Text="TokenIndex="/>
                    <TextBlock Text="{Binding ElementName=syntaxEditor, Path=TextArea.TokenIndex}"/>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>

        <TabControl Grid.Row="1" x:Name="tablControl"
                    Background="Transparent"
                    Foreground="WhiteSmoke">
            <TabItem Header="Editor">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="4*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <syntaxeditor:SyntaxEditor x:Name="syntaxEditor"  Grid.Row="0"
                                        FontSize="15" 
                                        FontFamily="Arial"
                                        IsLineNumberingVisible="True"  LineNumberForeColor="DarkGreen"
                                        KeywordForeground="Blue"
                                        LineCommentForeground="ForestGreen"
                                        >

                        <!--<i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextBoxBase.TextChanged">
                                <mvvm:EventToCommand Command="{Binding TextChangedCommand}" PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>-->

                    </syntaxeditor:SyntaxEditor>

                    <Grid Grid.Row="1">
                        <view:AlarmList DataContext="{Binding AlarmListVM}"/>
                    </Grid>
                </Grid>
                <!--                <syntaxeditor:SyntaxEditor Name="editor" IsLineNumberMarginVisible="True" 
                                           IsOutliningMarginVisible="True"
                                           DocumentTextChanged="editor_DocumentTextChanged"/>-->
            </TabItem>
            <TabItem Header="Grammar">
                <TextBox x:Name="grammarText" FontSize="18"
                         HorizontalScrollBarVisibility="Auto"
                         VerticalScrollBarVisibility="Auto"
                         Text="{Binding ElementName=syntaxEditor, Path=Parser.Grammar, Mode=OneWay, 
                            Converter={converter:PropertyValueToStringConverter} }"/>
            </TabItem>
            <TabItem Header="Canonical Table">
                <TextBox x:Name="canonicalRTB" IsReadOnly="True" FontSize="18" 
                         HorizontalScrollBarVisibility="Auto"
                         VerticalScrollBarVisibility="Auto"
                         Text="{Binding ElementName=syntaxEditor, Path=Parser.C0, Mode=OneWay, 
                            Converter={converter:PropertyValueToStringConverter}}"/>
            </TabItem>
            <TabItem Header="Parsing Table">
                <DockPanel>
                    <WindowsFormsHost x:Name="winformControl" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                </DockPanel>
            </TabItem>
            <TabItem Header="Parsing History">
                <DockPanel>
                    <WindowsFormsHost x:Name="parsingHistory" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                </DockPanel>
            </TabItem>
            <TabItem Header="Parse Tree" />
        </TabControl>

    </DockPanel>


    <i:Interaction.Behaviors>
        <behaviors:WindowLoadBehavior/>
    </i:Interaction.Behaviors>

</Window>
