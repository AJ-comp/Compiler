<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Wpf.UI.Basic.Controls">

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Foreground" Value="{DynamicResource ActiveTextBrush}"/>
        <Setter Property="CaretBrush" Value="{DynamicResource ActiveCaretBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Name="Border" CornerRadius="2" Padding="2"
                              Background="{DynamicResource ActiveTextBoxBackGroundBrush}"
                              BorderBrush="{DynamicResource ActiveTextBoxBorderBrush}"
                              BorderThickness="1" >
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost" Background="{DynamicResource ActiveTextBoxBackGroundBrush}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource InActiveTextBoxBackGroundBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource InActiveTextBoxBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource InActiveTextBrush}"/>
                            <Setter Property="CaretBrush" Value="{DynamicResource InActiveCaretBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- SimpleStyles: RichTextBox -->

    <Style x:Key="{x:Type RichTextBox}" BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type RichTextBox}">
        <Style.Resources>
            <Style x:Key="{x:Type FlowDocument}" TargetType="{x:Type FlowDocument}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
            </Style>
        </Style.Resources>
    </Style>

    <!-- SimpleStyles: PasswordBox -->

    <Style x:Key="{x:Type PasswordBox}" TargetType="{x:Type PasswordBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="FontFamily" Value="Verdana"/>
        <Setter Property="PasswordChar" Value="●"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border Name="Border"
                                  CornerRadius="2" 
                                  Padding="2" 
                                  Background="{DynamicResource ActiveTextBoxBackGroundBrush}"
                                  BorderBrush="{DynamicResource ActiveTextBoxBorderBrush}"
                                  BorderThickness="1" >
                        <ScrollViewer x:Name="PART_ContentHost" Background="{DynamicResource ActiveTextBoxBackGroundBrush}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource InActiveTextBoxBackGroundBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource InActiveTextBoxBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource InActiveTextBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>